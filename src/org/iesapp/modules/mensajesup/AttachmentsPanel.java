/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesapp.modules.mensajesup;

import com.l2fprod.common.swing.JLinkButton;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.iesapp.clients.sgd7.mensajes.*;
import org.iesapp.cloudws.client.CloudClientSession;
import org.iesapp.cloudws.client.HttpCloudUtils;
import org.iesapp.util.StringUtils;

/**
 *
 * @author Josep
 */
public class AttachmentsPanel extends javax.swing.JPanel {
    private ArrayList<BeanMensajesAttachment> attachments;
    private CloudClientSession session;
    private final ImageIcon clipImage;

    /**
     * Creates new form MensajesPanel
     */
    public AttachmentsPanel() {
        initComponents();
        clipImage = new ImageIcon(AttachmentsPanel.class.getResource("/org/iesapp/modules/mensajesup/icons/clip.gif"));
    }
    
    public void setAttachments(ArrayList<BeanMensajesAttachment> attachments, CloudClientSession session)
    {
        this.attachments = attachments;
        this.session = session;
        startup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void startup() {
        for(BeanMensajesAttachment bean: attachments)
        {
            JLinkButton link = new JLinkButton();
            String fitxer = StringUtils.AfterLast(bean.getAttachment(),File.separator);
            link.setText(fitxer+ " ("+bean.getSize()+")");
            link.setIcon(clipImage);
            link.setActionCommand(bean.getAttachment());
            link.addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    if(session!=null && session.ping()==200)
                    {
                    InputStream download = session.download(e.getActionCommand());
                    String onlyName = StringUtils.AfterLast(e.getActionCommand(), File.separator);
                    if(download!=null)
                    {
                        String outputName = System.getProperty("java.io.tmpdir") + File.separator + onlyName;
                        HttpCloudUtils.writeToFile(download, outputName);
                        try {
                            Desktop.getDesktop().open(new File(outputName));
                        } catch (IOException ex) {
                            Logger.getLogger(AttachmentsPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                                   
                    }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Ho lamentam per√≤ el servidor\nde fitxers no respon.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            });
            
        
            this.add(link);
        }
    }
}
